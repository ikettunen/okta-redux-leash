{"ast":null,"code":"import { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nexport { combineReducers, compose } from 'redux';\nimport createNextState from 'immer';\nexport { default as createNextState } from 'immer';\nexport { default as createSelector } from 'selectorator';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * protoype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\n\n\nfunction isPlainObject(value) {\n  if (_typeof(value) !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n */\n\n\nfunction isPlain(val) {\n  return typeof val === 'undefined' || val === null || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val) || isPlainObject(val);\n}\n\nvar NON_SERIALIZABLE_STATE_MESSAGE = ['A non-serializable value was detected in the state, in the path: `%s`. Value: %o', 'Take a look at the reducer(s) handling this action type: %s.', '(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)'].join('\\n');\nvar NON_SERIALIZABLE_ACTION_MESSAGE = ['A non-serializable value was detected in an action, in the path: `%s`. Value: %o', 'Take a look at the logic that dispatched this action:  %o.', '(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)'].join('\\n');\n\nfunction findNonSerializableValue(value) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var isSerializable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : isPlain;\n  var foundNestedSerializable;\n\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path.join('.') || '<root>',\n      value: value\n    };\n  }\n\n  if (_typeof(value) !== 'object' || value === null) {\n    return false;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n    var property = _Object$keys[_i];\n    var nestedPath = path.concat(property);\n    var nestedValue = value[property];\n\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath.join('.'),\n        value: nestedValue\n      };\n    }\n\n    if (_typeof(nestedValue) === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable);\n\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Options for `createSerializableStateInvariantMiddleware()`.\r\n */\n\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n */\n\n\nfunction createSerializableStateInvariantMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$isSerializab = options.isSerializable,\n      isSerializable = _options$isSerializab === void 0 ? isPlain : _options$isSerializab;\n  return function (storeAPI) {\n    return function (next) {\n      return function (action) {\n        var foundActionNonSerializableValue = findNonSerializableValue(action, [], isSerializable);\n\n        if (foundActionNonSerializableValue) {\n          var keyPath = foundActionNonSerializableValue.keyPath,\n              _value = foundActionNonSerializableValue.value;\n          console.error(NON_SERIALIZABLE_ACTION_MESSAGE, keyPath, _value, action);\n        }\n\n        var result = next(action);\n        var state = storeAPI.getState();\n        var foundStateNonSerializableValue = findNonSerializableValue(state);\n\n        if (foundStateNonSerializableValue) {\n          var _keyPath = foundStateNonSerializableValue.keyPath,\n              _value2 = foundStateNonSerializableValue.value;\n          console.error(NON_SERIALIZABLE_STATE_MESSAGE, _keyPath, _value2, action.type);\n        }\n\n        return result;\n      };\n    };\n  };\n}\n\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n */\n\nfunction getDefaultMiddleware() {\n  var middlewareArray = [thunk];\n\n  if (process.env.NODE_ENV !== 'production') {\n    var createImmutableStateInvariantMiddleware = require('redux-immutable-state-invariant')[\"default\"];\n\n    middlewareArray = [createImmutableStateInvariantMiddleware(), thunk, createSerializableStateInvariantMiddleware()];\n  }\n\n  return middlewareArray;\n}\n/**\r\n * Options for `configureStore()`.\r\n */\n\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n */\n\n\nfunction configureStore(options) {\n  var _ref = options || {},\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? undefined : _ref$reducer,\n      _ref$middleware = _ref.middleware,\n      middleware = _ref$middleware === void 0 ? getDefaultMiddleware() : _ref$middleware,\n      _ref$devTools = _ref.devTools,\n      devTools = _ref$devTools === void 0 ? true : _ref$devTools,\n      _ref$preloadedState = _ref.preloadedState,\n      preloadedState = _ref$preloadedState === void 0 ? undefined : _ref$preloadedState,\n      _ref$enhancers = _ref.enhancers,\n      enhancers = _ref$enhancers === void 0 ? [] : _ref$enhancers;\n\n  var rootReducer;\n\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = combineReducers(reducer);\n  } else {\n    throw new Error('Reducer argument must be a function or an object of functions that can be passed to combineReducers');\n  }\n\n  var middlewareEnhancer = applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n  var finalCompose = compose;\n\n  if (devTools) {\n    finalCompose = composeWithDevTools(_objectSpread({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, _typeof(devTools) === 'object' && devTools));\n  }\n\n  var storeEnhancers = [middlewareEnhancer].concat(_toConsumableArray(enhancers));\n  var composedEnhancer = finalCompose.apply(void 0, _toConsumableArray(storeEnhancers));\n  return createStore(rootReducer, preloadedState, composedEnhancer);\n}\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n */\n\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n */\n\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n */\n\n\nfunction createAction(type) {\n  function actionCreator(payload) {\n    return {\n      type: type,\n      payload: payload\n    };\n  }\n\n  actionCreator.toString = function () {\n    return \"\".concat(type);\n  };\n\n  actionCreator.type = type;\n  return actionCreator;\n}\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n */\n\n\nfunction getType(actionCreator) {\n  return \"\".concat(actionCreator);\n}\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @param initialState The initial state to be returned by the reducer.\r\n * @param actionsMap A mapping from action types to action-type-specific\r\n *   case redeucers.\r\n */\n\n\nfunction createReducer(initialState, actionsMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined; // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n    // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n    // these two types.\n\n    return createNextState(state, function (draft) {\n      var caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nfunction createSliceSelector(slice) {\n  if (!slice) {\n    return function (state) {\n      return state;\n    };\n  }\n\n  return function (state) {\n    return state[slice];\n  };\n}\n\nfunction createSelectorName(slice) {\n  if (!slice) {\n    return 'getState';\n  }\n\n  return camelize(\"get \".concat(slice));\n}\n\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '').replace(/[-_]/g, '');\n}\n/**\r\n * An action creator atttached to a slice.\r\n */\n\n\nfunction getType$1(slice, actionKey) {\n  return slice ? \"\".concat(slice, \"/\").concat(actionKey) : actionKey;\n}\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and optionally a \"slice name\", and automatically generates\r\n * action creators, action types, and selectors that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n */\n\n\nfunction createSlice(options) {\n  var _options$slice = options.slice,\n      slice = _options$slice === void 0 ? '' : _options$slice,\n      initialState = options.initialState;\n  var reducers = options.reducers || {};\n  var extraReducers = options.extraReducers || {};\n  var actionKeys = Object.keys(reducers);\n  var reducerMap = actionKeys.reduce(function (map, actionKey) {\n    map[getType$1(slice, actionKey)] = reducers[actionKey];\n    return map;\n  }, extraReducers);\n  var reducer = createReducer(initialState, reducerMap);\n  var actionMap = actionKeys.reduce(function (map, action) {\n    var type = getType$1(slice, action);\n    map[action] = createAction(type);\n    return map;\n  }, {});\n\n  var selectors = _defineProperty({}, createSelectorName(slice), createSliceSelector(slice));\n\n  return {\n    slice: slice,\n    reducer: reducer,\n    actions: actionMap,\n    selectors: selectors\n  };\n}\n\nexport { configureStore, createAction, createReducer, createSerializableStateInvariantMiddleware, createSlice, findNonSerializableValue, getDefaultMiddleware, getType, isPlain };","map":{"version":3,"sources":["/home/ilkka/okta-redux-leash/node_modules/redux-starter-kit/dist/redux-starter-kit.esm.js"],"names":["combineReducers","applyMiddleware","createStore","compose","createNextState","default","createSelector","composeWithDevTools","thunk","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","TypeError","isPlainObject","proto","getPrototypeOf","isPlain","val","NON_SERIALIZABLE_STATE_MESSAGE","join","NON_SERIALIZABLE_ACTION_MESSAGE","findNonSerializableValue","path","undefined","isSerializable","foundNestedSerializable","keyPath","_i","_Object$keys","property","nestedPath","nestedValue","createSerializableStateInvariantMiddleware","options","_options$isSerializab","storeAPI","next","action","foundActionNonSerializableValue","_value","console","error","result","state","getState","foundStateNonSerializableValue","_keyPath","_value2","type","IS_PRODUCTION","process","env","NODE_ENV","getDefaultMiddleware","middlewareArray","createImmutableStateInvariantMiddleware","require","configureStore","_ref","_ref$reducer","reducer","_ref$middleware","middleware","_ref$devTools","devTools","_ref$preloadedState","preloadedState","_ref$enhancers","enhancers","rootReducer","Error","middlewareEnhancer","apply","finalCompose","trace","storeEnhancers","composedEnhancer","createAction","actionCreator","payload","getType","createReducer","initialState","actionsMap","draft","caseReducer","createSliceSelector","slice","createSelectorName","camelize","str","replace","letter","index","toLowerCase","toUpperCase","getType$1","actionKey","createSlice","_options$slice","reducers","extraReducers","actionKeys","reducerMap","reduce","map","actionMap","selectors","actions"],"mappings":"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","sourcesContent":["import { combineReducers, applyMiddleware, createStore, compose } from 'redux';\nexport { combineReducers, compose } from 'redux';\nimport createNextState from 'immer';\nexport { default as createNextState } from 'immer';\nexport { default as createSelector } from 'selectorator';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\n/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * protoype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(value) {\n  if (_typeof(value) !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n */\nfunction isPlain(val) {\n  return typeof val === 'undefined' || val === null || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val) || isPlainObject(val);\n}\nvar NON_SERIALIZABLE_STATE_MESSAGE = ['A non-serializable value was detected in the state, in the path: `%s`. Value: %o', 'Take a look at the reducer(s) handling this action type: %s.', '(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)'].join('\\n');\nvar NON_SERIALIZABLE_ACTION_MESSAGE = ['A non-serializable value was detected in an action, in the path: `%s`. Value: %o', 'Take a look at the logic that dispatched this action:  %o.', '(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)'].join('\\n');\nfunction findNonSerializableValue(value) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var isSerializable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : isPlain;\n  var foundNestedSerializable;\n\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path.join('.') || '<root>',\n      value: value\n    };\n  }\n\n  if (_typeof(value) !== 'object' || value === null) {\n    return false;\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(value); _i < _Object$keys.length; _i++) {\n    var property = _Object$keys[_i];\n    var nestedPath = path.concat(property);\n    var nestedValue = value[property];\n\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath.join('.'),\n        value: nestedValue\n      };\n    }\n\n    if (_typeof(nestedValue) === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable);\n\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Options for `createSerializableStateInvariantMiddleware()`.\r\n */\n\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n */\nfunction createSerializableStateInvariantMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$isSerializab = options.isSerializable,\n      isSerializable = _options$isSerializab === void 0 ? isPlain : _options$isSerializab;\n  return function (storeAPI) {\n    return function (next) {\n      return function (action) {\n        var foundActionNonSerializableValue = findNonSerializableValue(action, [], isSerializable);\n\n        if (foundActionNonSerializableValue) {\n          var keyPath = foundActionNonSerializableValue.keyPath,\n              _value = foundActionNonSerializableValue.value;\n          console.error(NON_SERIALIZABLE_ACTION_MESSAGE, keyPath, _value, action);\n        }\n\n        var result = next(action);\n        var state = storeAPI.getState();\n        var foundStateNonSerializableValue = findNonSerializableValue(state);\n\n        if (foundStateNonSerializableValue) {\n          var _keyPath = foundStateNonSerializableValue.keyPath,\n              _value2 = foundStateNonSerializableValue.value;\n          console.error(NON_SERIALIZABLE_STATE_MESSAGE, _keyPath, _value2, action.type);\n        }\n\n        return result;\n      };\n    };\n  };\n}\n\nvar IS_PRODUCTION = process.env.NODE_ENV === 'production';\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n */\n\nfunction getDefaultMiddleware() {\n  var middlewareArray = [thunk];\n\n  if (process.env.NODE_ENV !== 'production') {\n    var createImmutableStateInvariantMiddleware = require('redux-immutable-state-invariant')[\"default\"];\n\n    middlewareArray = [createImmutableStateInvariantMiddleware(), thunk, createSerializableStateInvariantMiddleware()];\n  }\n\n  return middlewareArray;\n}\n/**\r\n * Options for `configureStore()`.\r\n */\n\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n */\nfunction configureStore(options) {\n  var _ref = options || {},\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? undefined : _ref$reducer,\n      _ref$middleware = _ref.middleware,\n      middleware = _ref$middleware === void 0 ? getDefaultMiddleware() : _ref$middleware,\n      _ref$devTools = _ref.devTools,\n      devTools = _ref$devTools === void 0 ? true : _ref$devTools,\n      _ref$preloadedState = _ref.preloadedState,\n      preloadedState = _ref$preloadedState === void 0 ? undefined : _ref$preloadedState,\n      _ref$enhancers = _ref.enhancers,\n      enhancers = _ref$enhancers === void 0 ? [] : _ref$enhancers;\n\n  var rootReducer;\n\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = combineReducers(reducer);\n  } else {\n    throw new Error('Reducer argument must be a function or an object of functions that can be passed to combineReducers');\n  }\n\n  var middlewareEnhancer = applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n  var finalCompose = compose;\n\n  if (devTools) {\n    finalCompose = composeWithDevTools(_objectSpread({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, _typeof(devTools) === 'object' && devTools));\n  }\n\n  var storeEnhancers = [middlewareEnhancer].concat(_toConsumableArray(enhancers));\n  var composedEnhancer = finalCompose.apply(void 0, _toConsumableArray(storeEnhancers));\n  return createStore(rootReducer, preloadedState, composedEnhancer);\n}\n\n/**\r\n * An action with a string type and an associated payload. This is the\r\n * type of action returned by `createAction()` action creators.\r\n *\r\n * @template P The type of the action's payload.\r\n * @template T the type used for the action type.\r\n */\n\n/**\r\n * An action creator that produces actions with a `payload` attribute.\r\n */\n\n/**\r\n * A utility function to create an action creator for the given action type\r\n * string. The action creator accepts a single argument, which will be included\r\n * in the action object as a field called payload. The action creator function\r\n * will also have its toString() overriden so that it returns the action type,\r\n * allowing it to be used in reducer logic that is looking for that action type.\r\n *\r\n * @param type The action type to use for created actions.\r\n */\nfunction createAction(type) {\n  function actionCreator(payload) {\n    return {\n      type: type,\n      payload: payload\n    };\n  }\n\n  actionCreator.toString = function () {\n    return \"\".concat(type);\n  };\n\n  actionCreator.type = type;\n  return actionCreator;\n}\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n */\n\nfunction getType(actionCreator) {\n  return \"\".concat(actionCreator);\n}\n\n/**\r\n * A utility function that allows defining a reducer as a mapping from action\r\n * type to *case reducer* functions that handle these action types. The\r\n * reducer's initial state is passed as the first argument.\r\n *\r\n * The body of every case reducer is implicitly wrapped with a call to\r\n * `produce()` from the [immer](https://github.com/mweststrate/immer) library.\r\n * This means that rather than returning a new state object, you can also\r\n * mutate the passed-in state object directly; these mutations will then be\r\n * automatically and efficiently translated into copies, giving you both\r\n * convenience and immutability.\r\n *\r\n * @param initialState The initial state to be returned by the reducer.\r\n * @param actionsMap A mapping from action types to action-type-specific\r\n *   case redeucers.\r\n */\nfunction createReducer(initialState, actionsMap) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n    // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n    // these two types.\n    return createNextState(state, function (draft) {\n      var caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nfunction createSliceSelector(slice) {\n  if (!slice) {\n    return function (state) {\n      return state;\n    };\n  }\n\n  return function (state) {\n    return state[slice];\n  };\n}\nfunction createSelectorName(slice) {\n  if (!slice) {\n    return 'getState';\n  }\n\n  return camelize(\"get \".concat(slice));\n}\n\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/\\s+/g, '').replace(/[-_]/g, '');\n}\n\n/**\r\n * An action creator atttached to a slice.\r\n */\n\nfunction getType$1(slice, actionKey) {\n  return slice ? \"\".concat(slice, \"/\").concat(actionKey) : actionKey;\n}\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and optionally a \"slice name\", and automatically generates\r\n * action creators, action types, and selectors that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n */\n\n\nfunction createSlice(options) {\n  var _options$slice = options.slice,\n      slice = _options$slice === void 0 ? '' : _options$slice,\n      initialState = options.initialState;\n  var reducers = options.reducers || {};\n  var extraReducers = options.extraReducers || {};\n  var actionKeys = Object.keys(reducers);\n  var reducerMap = actionKeys.reduce(function (map, actionKey) {\n    map[getType$1(slice, actionKey)] = reducers[actionKey];\n    return map;\n  }, extraReducers);\n  var reducer = createReducer(initialState, reducerMap);\n  var actionMap = actionKeys.reduce(function (map, action) {\n    var type = getType$1(slice, action);\n    map[action] = createAction(type);\n    return map;\n  }, {});\n\n  var selectors = _defineProperty({}, createSelectorName(slice), createSliceSelector(slice));\n\n  return {\n    slice: slice,\n    reducer: reducer,\n    actions: actionMap,\n    selectors: selectors\n  };\n}\n\nexport { configureStore, createAction, createReducer, createSerializableStateInvariantMiddleware, createSlice, findNonSerializableValue, getDefaultMiddleware, getType, isPlain };\n"]},"metadata":{},"sourceType":"module"}